name: Docker Compose Test

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

jobs:
  docker-compose:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: 1234
          MYSQL_DATABASE: travel_db
        ports:
          - 3307:3306  # 호스트의 3307 포트를 MySQL의 3306 포트에 바인딩
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      # 체크아웃
      - name: Checkout code
        uses: actions/checkout@v2

      # Docker Compose 설치
      - name: Set up Docker Compose
        run: |
          curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          chmod +x /usr/local/bin/docker-compose

      # Docker Compose로 백엔드 및 프론트엔드 서비스 빌드 및 실행
      - name: Build and run Docker Compose
        run: docker-compose -f docker-compose.yml up -d --build

      # 프론트엔드 서비스로 이동 후 의존성 설치
      - name: Install dependencies for frontend
        run: |
          docker-compose exec -T frontend npm install
          
      # 테스트 실행
      - name: Run tests
        run: |
          docker-compose exec frontend npm test -- --watchAll=false

      # 테스트 종료 후 종료
      - name: Shutdown containers
        run: docker-compose down
